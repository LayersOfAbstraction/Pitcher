// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pitcher.Data;

namespace Pitcher.Migrations
{
    [DbContext(typeof(TeamContext))]
    partial class TeamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pitcher.Models.Chat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChatDescription")
                        .IsRequired()
                        .HasColumnName("ChatDescription")
                        .HasMaxLength(255);

                    b.Property<string>("ChatPublishDate")
                        .IsRequired()
                        .HasColumnName("ProblemStartDate");

                    b.Property<int>("ProblemID");

                    b.HasKey("ID");

                    b.HasIndex("ProblemID");

                    b.ToTable("tblChat");
                });

            modelBuilder.Entity("Pitcher.Models.Job", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("JobDeadline")
                        .HasColumnName("JobDeadlineDate");

                    b.Property<string>("JobDescription")
                        .HasColumnName("JobDescription")
                        .HasMaxLength(200);

                    b.Property<bool>("JobIsComplete")
                        .HasColumnName("JobIsComplete");

                    b.Property<DateTime>("JobStartDate")
                        .HasColumnName("JobStartDate");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnName("JobTitle")
                        .HasMaxLength(20);

                    b.HasKey("ID");

                    b.ToTable("tblJob");
                });

            modelBuilder.Entity("Pitcher.Models.Problem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("JobID");

                    b.Property<bool>("ProblemComplete")
                        .HasColumnName("ProblemComplete");

                    b.Property<string>("ProblemDescription")
                        .IsRequired()
                        .HasColumnName("ProblemDescription")
                        .HasMaxLength(255);

                    b.Property<string>("ProblemFileAttachments")
                        .HasColumnName("ProblemFileAttachments");

                    b.Property<int>("ProblemSeverity")
                        .HasColumnName("ProblemSeverity");

                    b.Property<DateTime>("ProblemStartDate")
                        .HasColumnName("ProblemStartDate");

                    b.Property<string>("ProblemTitle")
                        .IsRequired()
                        .HasColumnName("ProblemTitle")
                        .HasMaxLength(180);

                    b.HasKey("ID");

                    b.HasIndex("JobID");

                    b.ToTable("tblProblem");
                });

            modelBuilder.Entity("Pitcher.Models.Registration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("JobID");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnName("RegistrationDate");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("JobID");

                    b.HasIndex("UserID");

                    b.ToTable("tblRegistration");
                });

            modelBuilder.Entity("Pitcher.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserAddress")
                        .HasColumnName("UserAddress")
                        .HasMaxLength(37);

                    b.Property<string>("UserContactEmail")
                        .IsRequired()
                        .HasColumnName("UserContactEmail")
                        .HasMaxLength(30);

                    b.Property<string>("UserCountry")
                        .HasColumnName("UserCountry")
                        .HasMaxLength(15);

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasColumnName("UserFirstName")
                        .HasMaxLength(20);

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnName("UserLastName")
                        .HasMaxLength(30);

                    b.Property<string>("UserMobileNumber")
                        .HasColumnName("UserMobileNumber");

                    b.Property<string>("UserPhoneNumber")
                        .HasColumnName("UserPhoneNumber");

                    b.Property<string>("UserPostCode")
                        .HasColumnName("UserPostCode");

                    b.Property<string>("UserState")
                        .HasColumnName("UserState")
                        .HasMaxLength(3);

                    b.HasKey("ID");

                    b.ToTable("tblUser");
                });

            modelBuilder.Entity("Pitcher.Models.Chat", b =>
                {
                    b.HasOne("Pitcher.Models.Problem", "Problem")
                        .WithMany("Chat")
                        .HasForeignKey("ProblemID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pitcher.Models.Problem", b =>
                {
                    b.HasOne("Pitcher.Models.Job", "Job")
                        .WithMany("Problems")
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pitcher.Models.Registration", b =>
                {
                    b.HasOne("Pitcher.Models.Job", "Job")
                        .WithMany("Registrations")
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pitcher.Models.User", "User")
                        .WithMany("Registrations")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
